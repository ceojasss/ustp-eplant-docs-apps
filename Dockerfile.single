FROM node:16 as build
# FROM node:16
ENV NODE_ENV production
WORKDIR /app/frontend
# COPY . /app/frontend
COPY package.json ./
RUN npm install --production
# RUN npm i serve
RUN mkdir node_modules/.cache && chmod -R 777 node_modules/.cache
# RUN npm install react-scripts@3.4.1 -g --silent
COPY . .
# RUN npm run build
ARG GENERATE_SOURCEMAP
ARG REACT_APP_URLS
ARG REACT_APP_LOGIN
ARG HTTPS 
ARG REACT_APP_HTTPS
ARG REACT_APP_SINGLE_PORT
ARG SSL_CRT_FILE
ARG SSL_KEY_FILE
ARG SSL_CA_FILE
ARG REACT_APP_LOGO
ARG REACT_APP_MAINTENANCE

ENV GENERATE_SOURCEMAP $GENERATE_SOURCEMAP
ENV REACT_APP_URLS $REACT_APP_URLS
ENV REACT_APP_LOGIN $REACT_APP_LOGIN
ENV HTTPS $HTTPS
ENV REACT_APP_HTTPS $REACT_APP_HTTPS
ENV REACT_APP_SINGLE_PORT $REACT_APP_SINGLE_PORT
ENV SSL_CA_FILE $SSL_CA_FILE
ENV SSL_KEY_FILE $SSL_KEY_FILE
ENV SSL_CRT_FILE $SSL_CRT_FILE
ENV REACT_APP_LOGO $REACT_APP_LOGO
ENV REACT_APP_MAINTENANCE $REACT_APP_MAINTENANCE
# RUN npm ci
RUN npm run build
# EXPOSE 3000
# CMD serve -s build

FROM nginx:1.21.0-alpine as production
ENV NODE_ENV production

COPY ./docker/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf
# COPY ./reactcrt/ /etc/reactcrt/
COPY --from=build /app/frontend/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

